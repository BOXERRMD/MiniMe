from typing import AnyStr

class FileCompressor:

    def __init__(self, file: AnyStr, path: str):
        self.file: bytes = file
        self.path = path
        print(file)
        print(len(file))
        print(file.decode('utf-8'))

"""
b'coucou mon b\xc3\xa9b\xc3\xa9 ! \xf0\x9f\x98\x8a'
24
coucou mon b√©b√© ! üòä

Voici un exemple d'un texte d'abbord convertis en ASCII (premi√®re ligne) suivit du nombre d'octets que prend cette ligne.
La derni√®re repr√©sente la m√™me ligne converti en utf-8.

Le principe est le suivant : tous les caract√®res de l'alphabet latin + les nombres et certains caract√®res ne prennent que 1 octet pour √™tre stock√©.
Chaque caract√®re prenant plus de 1 octet sera enlever et stock√© dans un dictionnaire avec les positions de celui-ci dans le texte.

PROBLEME : prend plus de place pour stock√© les positions que de laisser le caract√®re en place (si le nombre d√©passe ou est √©gale au nombre d'octet de celui-ci)
"""

